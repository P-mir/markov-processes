#File path
setwd("~/GitHub/markov-processes")
source('C:/Users/p/Documents/GitHub/markov-processes/Result_Analysis.R', echo=TRUE)
setwd("C:/Users/p/Documents/GitHub/markov-processes/.git")
setwd("C:/Users/p/Documents/GitHub")
#File path
setwd("~/markov-processes")
setwd("C:/Users/p/Documents/GitHub/markov-processes")
#File path
setwd("~/GitHub/markov-processes")
#File path
setwd("~/GitHub/markov-processes")
#File path
setwd("~/Databases")
#File path
setwd("~/GitHub/markov-processes")
getwd
getwd()
setwd("C:/Users/p/Documents/GitHub")
#File path
#setwd("~/GitHub/markov-processes")
setwd("C:/Users/p/Documents/GitHub/markov-processes")
source('C:/Users/p/Documents/GitHub/markov-processes/Result_Analysis.R', echo=TRUE)
par(mfrow=c(1,5))
for( i in 1 : 5){
boxplot(simulation_game(1,policy_list_rule1[[1]],1),main=colnames(result_matrix_rule1)[i],ylab=c(0,250))
}
if (!require("magrittr")) install.packages("magrittr")
if (!require("dplyr")) install.packages("dplyr")
library(corrplot)
setwd("C:/Users/p/OneDrive - UCL/Traitement des données omics/Devoirs/projet données qPCR")
data=read.table("data_qPCR.csv",header=T,sep=";",dec=".")
sick=data[ which(data$Groupe=='malade'), ]
control=data[ which(data$Groupe=='temoin'), ]
smean=apply(sick[(3:21)],2,mean)
cmean=apply(control[(3:21)],2,mean)
barplot(height=t(cbind(smean,cmean)),beside=T,space=c(0,2),col=c("black","red"), border=F,main="Mean comparison")
legend("topleft",legend=c("sick","control"),fill=c("black","red"),cex=1.1)
smedian=apply(sick[(3:21)],2,median)
cmedian=apply(control[(3:21)],2,median)
barplot(height=t(cbind(smedian,cmedian)),beside=T,space=c(0,2),col=c("black","red"), border=F,main="Median comparison")
legend("topright",legend=c("sick","control"),fill=c("black","red"),cex=1.1)
s_std=apply(sick[(3:21)],2,sd)
c_std=apply(control[(3:21)],2,sd)
barplot(height=t(cbind(s_std,c_std)),beside=T,space=c(0,2),col=c("black","red"), border=F,main="Standard deviation comparison")
legend("topleft",legend=c("sick","control"),fill=c("black","red"),cex=1.1)
shap=apply(data[3:40],2,shapiro.test)
pvalues = sapply(shap, `[`, c("p.value"))
pvalues = pvalues[ which(pvalues<0.05)]
pander(pvalues)
boxplot(x=sick[3:21],main="Boxplot of the miRNA, sick patients",xlab="miRNA",col = "blue",names=F)
boxplot(x=control[3:21],main="Boxplot of the miRNA, healthy patients",xlab="miRNA",col = "blue",names=F)
#how to choose the ones to remove?
# why removing the outliers?
std=5
Sick=sick
for (i in 3:40) {
Sick= Sick[!Sick[,i] %in% boxplot(sick[,i], plot=FALSE,range=std)$out,]
}
outliers = boxplot(control[3:40], plot=FALSE,range=std)$out
Control=control
for (i in 3:40) {
Control= Control[!Control[,i] %in% boxplot(control[,i], plot=FALSE,range=std)$out,]
}
message("Proportion (%) of outliers: ", round((length(data[,1])-length(Sick[,1])-length(Control[,1])) /length(data[,1])*100,2))
# aka double-samples wilcoxon test
# almost as efficient as t-test even when normality hold!
#ranks will be similar if the population are the same
wilcox_pvalues=sapply(3:21, function(i){
wilcox.test(Sick[,i], Control[,i], )$p.value
})
wilcox_pvalues=as.data.frame(t(wilcox_pvalues))
colnames(wilcox_pvalues)=colnames(data[3:21])
wilcox_pvalues = t(wilcox_pvalues[ which(wilcox_pvalues[1,]<0.05)])
pander(wilcox_pvalues)
df= rbind(Sick,Control)
df$Groupe= as.factor(df$Groupe)
ncp=4
PCA.res = prcomp(df[3:21],center = T, scale = T,rank. = ncp)
fviz_screeplot(PCA.res, choice="eigenvalue")
# correlation plot
# fviz_pca_var(PCA.res)
Classes=df$Groupe
#Score plot avec la librairie factoextra
fviz_pca_biplot(PCA.res,habillage=Classes)
source('C:/Users/p/Documents/GitHub/markov-processes/Result_Analysis.R', echo=TRUE)
p_secure1 <-rbind(
c(0.5,0.5,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
c(0,0.5,0.5,0,0,0,0,0,0,0,0,0,0,0,0,0),
c(0,0,0.5,0.25,0,0,0,0,0,0,0,0.25,0,0,0,0),
c(0,0,0,0.5,0.5,0,0,0,0,0,0,0,0,0,0,0),
c(0,0,0,0,0.5,0.5,0,0,0,0,0,0,0,0,0,0),
c(0,0,0,0,0,0.5,0.5,0,0,0,0,0,0,0,0),
c(0,0,0,0,0,0,0.5,0.5,0,0,0,0,0,0,0,0),
c(0,0,0,0,0,0,0,0.5,0,0.5,0,0,0,0,0,0),   # saute la case piège
c(0,0,0,0,0,0,0,0,0,0.5,0.5,0,0,0,0,0),
c(0,0,0,0,0,0,0,0,0,0,0.5,0,0,0,0,0.5),
c(0,0,0,0,0,0,0,0,0,0,0,0.5,0.5,0,0,0),
c(0,0,0,0,0,0,0,0,0,0,0,0,0.5,0.5,0,0),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0.5,0.5,0),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5,0.5),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1))
p_secure1 <-rbind(
c(0.5,0.5,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
c(0,0.5,0.5,0,0,0,0,0,0,0,0,0,0,0,0,0),
c(0,0,0.5,0.25,0,0,0,0,0,0,0,0.25,0,0,0,0),
c(0,0,0,0.5,0.5,0,0,0,0,0,0,0,0,0,0,0),
c(0,0,0,0,0.5,0.5,0,0,0,0,0,0,0,0,0,0),
c(0,0,0,0,0,0.5,0.5,0,0,0,0,0,0,0,0,0),
c(0,0,0,0,0,0,0.5,0.5,0,0,0,0,0,0,0,0),
c(0,0,0,0,0,0,0,0.5,0,0.5,0,0,0,0,0,0),   # saute la case piège
c(0,0,0,0,0,0,0,0,0,0.5,0.5,0,0,0,0,0),
c(0,0,0,0,0,0,0,0,0,0,0.5,0,0,0,0,0.5),
c(0,0,0,0,0,0,0,0,0,0,0,0.5,0.5,0,0,0),
c(0,0,0,0,0,0,0,0,0,0,0,0,0.5,0.5,0,0),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0.5,0.5,0),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5,0.5),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1))
p_normal1 <-rbind(
c(1/3,1/3,1/3,0,0,0,0,0,0,0,0,0,0,0,0,0),
c(0,1/3,1/3,1/3,0,0,0,0,0,0,0,0,0,0,0,0),
c(0,0,1/3,1/6,1/6,0,0,0,0,0,0,1/6,1/6,0,0,0),
c(0,0,0,1/3,1/3,1/3,0,0,0,0,0,0,0,0,0,0),
c(0,0,0,1/6,1/3,1/3,1/6,0,0,0,0,0,0,0,0,0),
c(0,0,0,1/6,0,1/3,1/6,1/3,0,0,0,0,0,0,0,0),
c(0,0,0,1/6,0,0,1/6,1/3,1/3,0,0,0,0,0,0,0),
c(0,0,0,0,0,0,0,1/3,1/3,1/3,0,0,0,0,0),
c(0,0,0,0,0,0,0,0,1/3,1/3,0,0,0,0,1/3),
c(0,0,0,0,0,0,0,0,0,1/3,0,0,0,0,2/3),
c(1/6,0,0,0,0,0,0,0,0,0,1/3,1/3,1/6,0,0),
c(1/6,0,0,0,0,0,0,0,0,0,0,1/3,1/6,1/3,0),
c(1/6,0,0,0,0,0,0,0,0,0,0,0,1/6,1/3,1/3),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,1/3,2/3),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,1))
p_normal1 <-rbind(
c(1/3,1/3,1/3,0,0,0,0,0,0,0,0,0,0,0,0,0),
c(0,1/3,1/3,1/3,0,0,0,0,0,0,0,0,0,0,0,0),
c(0,0,1/3,1/6,1/6,0,0,0,0,0,0,1/6,1/6,0,0,0),
c(0,0,0,1/3,1/3,1/3,0,0,0,0,0,0,0,0,0,0),
c(0,0,0,1/6,1/3,1/3,1/6,0,0,0,0,0,0,0,0,0),
c(0,0,0,1/6,0,1/3,1/6,1/3,0,0,0,0,0,0,0,0),
c(0,0,0,1/6,0,0,1/6,1/3,1/3,0,0,0,0,0,0,0),
c(0,0,0,0,0,0,0,1/3,1/3,0,1/3,0,0,0,0,0),
c(0,0,0,0,0,0,0,0,1/3,1/3,0,0,0,0,1/3),
c(0,0,0,0,0,0,0,0,0,1/3,0,0,0,0,2/3),
c(1/6,0,0,0,0,0,0,0,0,0,1/3,1/3,1/6,0,0),
c(1/6,0,0,0,0,0,0,0,0,0,0,1/3,1/6,1/3,0),
c(1/6,0,0,0,0,0,0,0,0,0,0,0,1/6,1/3,1/3),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,1/3,2/3),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,1))
dim(c(0,0,0,0,0,0,0,0,0,1/3,1/2,1/6,0,0,0,0,1/6))
p_normal1 <-rbind(
c(1/3,1/3,1/3,0,0,0,0,0,0,0,0,0,0,0,0,0),
c(0,1/3,1/3,1/3,0,0,0,0,0,0,0,0,0,0,0,0),
c(0,0,1/3,1/6,1/6,0,0,0,0,0,0,1/6,1/6,0,0,0),
c(0,0,0,1/3,1/3,1/3,0,0,0,0,0,0,0,0,0,0),
c(0,0,0,1/6,1/3,1/3,1/6,0,0,0,0,0,0,0,0,0),
c(0,0,0,1/6,0,1/3,1/6,1/3,0,0,0,0,0,0,0,0),
c(0,0,0,1/6,0,0,1/6,1/3,1/3,0,0,0,0,0,0,0),
c(0,0,0,0,0,0,0,1/3,1/6,1/6,1/3,0,0,0,0,0),   # si la case prison ne s'active pas le joueur passe de 8 à 10
c(0,0,0,0,0,0,0,0,1/3,1/3,0,0,0,0,0,1/3),
length(c(0,0,0,0,0,0,0,0,0,1/3,1/2,1/6,0,0,0,0,1/6)),
c(0,0,0,0,0,0,0,0,0,1/3,0,0,0,0,2/3),
c(1/6,0,0,0,0,0,0,0,0,0,1/3,1/3,1/6,0,0),
c(1/6,0,0,0,0,0,0,0,0,0,0,1/3,1/6,1/3,0),
c(1/6,0,0,0,0,0,0,0,0,0,0,0,1/6,1/3,1/3),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,1/3,2/3),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,1))
length(c(0,0,0,0,0,0,0,0,0,1/3,1/2,1/6,0,0,0,0,1/6))
p_secure1 <-rbind(
c(0.5,0.5,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
c(0,0.5,0.5,0,0,0,0,0,0,0,0,0,0,0,0,0),
c(0,0,0.5,0.25,0,0,0,0,0,0,0,0.25,0,0,0,0),
c(0,0,0,0.5,0.5,0,0,0,0,0,0,0,0,0,0,0),
c(0,0,0,0,0.5,0.5,0,0,0,0,0,0,0,0,0,0),
c(0,0,0,0,0,0.5,0.5,0,0,0,0,0,0,0,0,0),
c(0,0,0,0,0,0,0.5,0.5,0,0,0,0,0,0,0,0),
c(0,0,0,0,0,0,0,0.5,0,0.5,0,0,0,0,0,0),   # saute la case piège
c(0,0,0,0,0,0,0,0,0.5,0.5,0,0,0,0,0,0),
c(0,0,0,0,0,0,0,0,0,0.5,0.5,0,0,0,0,0),
c(0,0,0,0,0,0,0,0,0,0,0.5,0,0,0,0,0.5),
c(0,0,0,0,0,0,0,0,0,0,0,0.5,0.5,0,0,0),
c(0,0,0,0,0,0,0,0,0,0,0,0,0.5,0.5,0,0),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0.5,0.5,0),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5,0.5),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1))
p_normal1 <-rbind(
c(1/3,1/3,1/3,0,0,0,0,0,0,0,0,0,0,0,0,0),
c(0,1/3,1/3,1/3,0,0,0,0,0,0,0,0,0,0,0,0),
c(0,0,1/3,1/6,1/6,0,0,0,0,0,0,1/6,1/6,0,0,0),
c(0,0,0,1/3,1/3,1/3,0,0,0,0,0,0,0,0,0,0),
c(0,0,0,1/6,1/3,1/3,1/6,0,0,0,0,0,0,0,0,0),
c(0,0,0,1/6,0,1/3,1/6,1/3,0,0,0,0,0,0,0,0),
c(0,0,0,1/6,0,0,1/6,1/3,1/6,1/6,0,0,0,0,0,0),
c(0,0,0,0,0,0,0,1/3,1/6,1/6,1/3,0,0,0,0,0),
c(0,0,0,0,0,0,0,0,1/3,0,1/3,0,0,0,0,1/3),
c(0,0,0,0,0,0,0,0,0,1/3,1/3,0,0,0,0,1/6), #case suplémentaire
c(1/3,0,0,0,0,0,0,0,0,0,0,1/3,0,0,0,0,1/3),
c(1/6,0,0,0,0,0,0,0,0,0,0,1/3,1/3,1/6,0,0),
c(1/6,0,0,0,0,0,0,0,0,0,0,0,1/3,1/6,1/3,0),
c(1/6,0,0,0,0,0,0,0,0,0,0,0,0,1/6,1/3,1/3),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,1/3,2/3),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1))
length(c(1/3,1/3,1/3,0,0,0,0,0,0,0,0,0,0,0,0,0))
p_normal2 <-rbind(
c(1/3,1/3,1/3,0,0,0,0,0,0,0,0,0,0,0,0,0),
c(0,1/3,1/3,1/3,0,0,0,0,0,0,0,0,0,0,0,0),
c(0,0,1/3,1/6,1/6,0,0,0,0,0,0,1/6,1/6,0,0,0),
c(0,0,0,1/3,1/3,1/3,0,0,0,0,0,0,0,0,0,0),
c(0,0,0,1/6,1/3,1/3,1/6,0,0,0,0,0,0,0,0,0),
c(0,0,0,1/6,0,1/3,1/6,1/3,0,0,0,0,0,0,0,0),
c(0,0,0,1/6,0,0,1/6,1/3,1/6,1/6,0,0,0,0,0,0),
c(0,0,0,0,0,0,0,1/3,1/6,1/6,1/3,0,0,0,0,0),
c(0,0,0,0,0,0,0,0,1/3,0,1/3,0,0,0,0,1/3),
c(0,0,0,0,0,0,0,0,0,1/3,1/3,0,0,0,0,1/6), #case suplémentaire
c(1/3,0,0,0,0,0,0,0,0,0,0,1/3,0,0,0,0,1/3),
c(1/6,0,0,0,0,0,0,0,0,0,0,1/3,1/3,1/6,0,0),
c(1/6,0,0,0,0,0,0,0,0,0,0,0,1/3,1/6,1/3,0),
c(1/6,0,0,0,0,0,0,0,0,0,0,0,0,1/6,1/3,1/3),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,1/3,2/3),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1))
p_normal2<-matrix(nrow=16,ncol=16)
p_normal2 <-rbind(
c(1/3,1/3,1/3,0,0,0,0,0,0,0,0,0,0,0,0,0),
c(0,1/3,1/3,1/3,0,0,0,0,0,0,0,0,0,0,0,0),
c(0,0,1/3,1/6,1/6,0,0,0,0,0,0,1/6,1/6,0,0,0),
c(0,0,0,1/3,1/3,1/3,0,0,0,0,0,0,0,0,0,0),
c(0,0,0,1/6,1/3,1/3,1/6,0,0,0,0,0,0,0,0,0),
c(0,0,0,1/6,0,1/3,1/6,1/3,0,0,0,0,0,0,0,0),
c(0,0,0,1/6,0,0,1/6,1/3,1/6,1/6,0,0,0,0,0,0),
c(0,0,0,0,0,0,0,1/3,1/6,1/6,1/3,0,0,0,0,0),
c(0,0,0,0,0,0,0,0,1/3,0,1/3,0,0,0,0,1/3),
c(0,0,0,0,0,0,0,0,0,1/3,1/3,0,0,0,0,1/6), #case suplémentaire
c(1/3,0,0,0,0,0,0,0,0,0,0,1/3,0,0,0,0,1/3),
c(1/6,0,0,0,0,0,0,0,0,0,0,1/3,1/3,1/6,0,0),
c(1/6,0,0,0,0,0,0,0,0,0,0,0,1/3,1/6,1/3,0),
c(1/6,0,0,0,0,0,0,0,0,0,0,0,0,1/6,1/3,1/3),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,1/3,2/3),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1))
p_secure1<-matrix(ncol=16,nrow=16)
p_secure1 <-rbind(
c(0.5,0.5,0,0,0,0,0,0,0,0,0,0,0,0,0,0),
c(0,0.5,0.5,0,0,0,0,0,0,0,0,0,0,0,0,0),
c(0,0,0.5,0.25,0,0,0,0,0,0,0,0.25,0,0,0,0),
c(0,0,0,0.5,0.5,0,0,0,0,0,0,0,0,0,0,0),
c(0,0,0,0,0.5,0.5,0,0,0,0,0,0,0,0,0,0),
c(0,0,0,0,0,0.5,0.5,0,0,0,0,0,0,0,0,0),
c(0,0,0,0,0,0,0.5,0.5,0,0,0,0,0,0,0,0),
c(0,0,0,0,0,0,0,0.5,0,0.5,0,0,0,0,0,0),   # saute la case piège
c(0,0,0,0,0,0,0,0,0.5,0.5,0,0,0,0,0,0),
c(0,0,0,0,0,0,0,0,0,0.5,0.5,0,0,0,0,0),
c(0,0,0,0,0,0,0,0,0,0,0.5,0,0,0,0,0.5),
c(0,0,0,0,0,0,0,0,0,0,0,0.5,0.5,0,0,0),
c(0,0,0,0,0,0,0,0,0,0,0,0,0.5,0.5,0,0),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0.5,0.5,0),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0.5,0.5),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1))
p_normal1<-matrix(nrow=16,ncol=16)
p_normal1 <-rbind(
c(1/3,1/3,1/3,0,0,0,0,0,0,0,0,0,0,0,0,0),
c(0,1/3,1/3,1/3,0,0,0,0,0,0,0,0,0,0,0,0),
c(0,0,1/3,1/6,1/6,0,0,0,0,0,0,1/6,1/6,0,0,0),
c(0,0,0,1/3,1/3,1/3,0,0,0,0,0,0,0,0,0,0),
c(0,0,0,1/6,1/3,1/3,1/6,0,0,0,0,0,0,0,0,0),
c(0,0,0,1/6,0,1/3,1/6,1/3,0,0,0,0,0,0,0,0),
c(0,0,0,1/6,0,0,1/6,1/3,1/6,1/6,0,0,0,0,0,0),
c(0,0,0,0,0,0,0,1/3,1/6,1/6,1/3,0,0,0,0,0),   # si la case prison ne s'active pas le joueur passe de 8 à 10
c(0,0,0,0,0,0,0,0,1/3,0,1/3,0,0,0,0,1/3),
c(0,0,0,0,0,0,0,0,0,1/3,1/3,0,0,0,0,1/6), #case suplémentaire
c(0,0,0,0,0,0,0,0,0,0,1/3,0,0,0,0,2/3),
c(1/6,0,0,0,0,0,0,0,0,0,0,1/3,1/3,1/6,0,0),
c(1/6,0,0,0,0,0,0,0,0,0,0,0,1/3,1/6,1/3,0),
c(1/6,0,0,0,0,0,0,0,0,0,0,0,0,1/6,1/3,1/3),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,1/3,2/3),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1))
p_normal2<-matrix(nrow=16,ncol=16)
p_normal2 <-rbind(
c(1/3,1/3,1/3,0,0,0,0,0,0,0,0,0,0,0,0,0),
c(0,1/3,1/3,1/3,0,0,0,0,0,0,0,0,0,0,0,0),
c(0,0,1/3,1/6,1/6,0,0,0,0,0,0,1/6,1/6,0,0,0),
c(0,0,0,1/3,1/3,1/3,0,0,0,0,0,0,0,0,0,0),
c(0,0,0,1/6,1/3,1/3,1/6,0,0,0,0,0,0,0,0,0),
c(0,0,0,1/6,0,1/3,1/6,1/3,0,0,0,0,0,0,0,0),
c(0,0,0,1/6,0,0,1/6,1/3,1/6,1/6,0,0,0,0,0,0),
c(0,0,0,0,0,0,0,1/3,1/6,1/6,1/3,0,0,0,0,0),   # si la case prison ne s'active pas le joueur passe de 8 à 10
c(0,0,0,0,0,0,0,0,1/3,0,1/3,0,0,0,0,1/3),
c(0,0,0,0,0,0,0,0,0,1/3,1/3,0,0,0,0,1/6), #case suplémentaire
c(1/3,0,0,0,0,0,0,0,0,0,1/3,0,0,0,0,1/3),
c(1/6,0,0,0,0,0,0,0,0,0,0,1/3,1/3,1/6,0,0),
c(1/6,0,0,0,0,0,0,0,0,0,0,0,1/3,1/6,1/3,0),
c(1/6,0,0,0,0,0,0,0,0,0,0,0,0,1/6,1/3,1/3),
c(1/3,0,0,0,0,0,0,0,0,0,0,0,0,0,1/3,1/3),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1))
p_risk1<-matrix(nrow=16,ncol=16)
p_risk1 <-rbind(
c(1/4,1/4,1/4,1/4,0,0,0,0,0,0,0,0,0,0,0,0),
c(0,1/4,1/4,1/4,1/4,0,0,0,0,0,0,0,0,0,0,0),
c(1/8,0,1/4,1/8,1/8,1/8,0,0,0,0,0,1/8,1/8,0,0,0),
c(0,0,0,2/4,1/4,1/4,0,0,0,0,0,0,0,0,0,0),
c(0,0,0,1/4,1/4,1/4,0,1/4,0,0,0,0,0,0,0,0),
c(0,0,0,1/4,0,1/4,0,1/4,1/4,0,0,0,0,0,0,0),
c(0,0,0,1/4,0,0,0,1/4,1/4,0,1/4,0,0,0,0,0),
c(0,0,0,0,0,0,0,1/4,1/4,0,1/4,0,0,0,0,1/4),
c(0,0,0,0,0,0,0,0,1/4,1/4,1/4,0,0,0,1/4),
c(0,0,0,0,0,0,0,0,0,1/4,1/4,0,0,0,0,2/4),
c(0,0,0,0,0,0,0,0,0,0,1/4,0,0,0,0,3/4),
c(1/4,0,0,0,0,0,0,0,0,0,0,1/4,0,1/4,1/4,0),
c(1/4,0,0,0,0,0,0,0,0,0,0,0,0,1/4,1/4,1/4),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,1/4,1/4,2/4),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,1/4,3/4),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,1))
p_risk1 <-rbind(
c(1/4,1/4,1/4,1/4,0,0,0,0,0,0,0,0,0,0,0,0),
c(0,1/4,1/4,1/4,1/4,0,0,0,0,0,0,0,0,0,0,0),
c(1/8,0,1/4,1/8,1/8,1/8,0,0,0,0,0,1/8,1/8,0,0,0),
c(0,0,0,2/4,1/4,1/4,0,0,0,0,0,0,0,0,0,0),
c(0,0,0,1/4,1/4,1/4,0,1/4,0,0,0,0,0,0,0,0),
c(0,0,0,1/4,0,1/4,0,1/4,1/4,0,0,0,0,0,0,0),
c(0,0,0,1/4,0,0,0,1/4,1/4,0,1/4,0,0,0,0,0),
c(0,0,0,0,0,0,0,1/4,1/4,0,1/4,0,0,0,0,1/4),
c(0,0,0,0,0,0,0,0,1/4,1/4,1/4,0,0,0,0,1/4),
c(0,0,0,0,0,0,0,0,0,1/4,1/4,0,0,0,0,2/4),
c(0,0,0,0,0,0,0,0,0,0,1/4,0,0,0,0,3/4),
c(1/4,0,0,0,0,0,0,0,0,0,0,1/4,0,1/4,1/4,0),
c(1/4,0,0,0,0,0,0,0,0,0,0,0,0,1/4,1/4,1/4),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,1/4,1/4,2/4),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,1/4,3/4),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,1))
p_risk1 <-rbind(
c(1/4,1/4,1/4,1/4,0,0,0,0,0,0,0,0,0,0,0,0),
c(0,1/4,1/4,1/4,1/4,0,0,0,0,0,0,0,0,0,0,0),
c(1/8,0,1/4,1/8,1/8,1/8,0,0,0,0,0,1/8,1/8,0,0,0),
c(0,0,0,2/4,1/4,1/4,0,0,0,0,0,0,0,0,0,0),
c(0,0,0,1/4,1/4,1/4,0,1/4,0,0,0,0,0,0,0,0),
c(0,0,0,1/4,0,1/4,0,1/4,1/4,0,0,0,0,0,0,0),
c(0,0,0,1/4,0,0,0,1/4,1/4,0,1/4,0,0,0,0,0),
c(0,0,0,0,0,0,0,1/4,1/4,0,1/4,0,0,0,0,1/4),
c(0,0,0,0,0,0,0,0,1/4,1/4,1/4,0,0,0,0,1/4),
c(0,0,0,0,0,0,0,0,0,1/4,1/4,0,0,0,0,2/4),
c(0,0,0,0,0,0,0,0,0,0,1/4,0,0,0,0,3/4),
c(1/4,0,0,0,0,0,0,0,0,0,0,1/4,0,1/4,1/4,0),
c(1/4,0,0,0,0,0,0,0,0,0,0,0,0,1/4,1/4,1/4),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,1/4,1/4,2/4),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,1/4,3/4),
c(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1))
source('C:/Users/p/Documents/GitHub/markov-processes/Result_Analysis.R', echo=TRUE)
source('C:/Users/p/Documents/GitHub/markov-processes/Result_Analysis.R', echo=TRUE)
source('C:/Users/p/Documents/GitHub/markov-processes/Result_Analysis.R', echo=TRUE)
source('C:/Users/p/Documents/GitHub/markov-processes/Result_Analysis.R', echo=TRUE)
source('C:/Users/p/Documents/GitHub/markov-processes/Result_Analysis.R', echo=TRUE)
source('C:/Users/p/Documents/GitHub/markov-processes/Result_Analysis.R', echo=TRUE)
roll_dice(1)
roll_dice(1)
roll_dice(1)
roll_dice(1)
roll_dice(1)
roll_dice(1)
roll_dice(1)
activate_trap()==F
activate_trap()
activate_trap()==FALSE
b()
b= function(a) { a=TRUE}
b()
b= function(a) { return(TRUE)}
b()
if (b()==FALSE){print(4)}
b= function(a) { return(FALSE)}
if (b()==FALSE){print(4)}
b= function(a) { return(TRUE)}
if (b()==FALSE){print(4)}
source('C:/Users/p/Documents/GitHub/markov-processes/Result_Analysis.R', echo=TRUE)
source('C:/Users/p/Documents/GitHub/markov-processes/Result_Analysis.R', echo=TRUE)
policy[position]
S
R
v_iter(p_secure2,p_normal2,p_risk2,C)[[1]]
v_iter(p_secure1,p_normal1,p_risk1,C)[[1]]
policy_list_rule1 <- list(opt_policy_rule1,always_dice1,always_dice2,always_dice3,random_dice)
policy_list_rule1
source('C:/Users/p/Documents/GitHub/markov-processes/Result_Analysis.R', echo=TRUE)
length(policy_list_rule1)
dim(policy_list_rule1)
policy_list_rule1
source('C:/Users/p/Documents/GitHub/markov-processes/simulation_game.R', echo=TRUE)
source('C:/Users/p/Documents/GitHub/markov-processes/Result_Analysis.R', echo=TRUE)
source('C:/Users/p/Documents/GitHub/markov-processes/Result_Analysis.R', echo=TRUE)
source('C:/Users/p/Documents/GitHub/markov-processes/Result_Analysis.R', echo=TRUE)
source('C:/Users/p/Documents/GitHub/markov-processes/Result_Analysis.R', echo=TRUE)
source('C:/Users/p/Documents/GitHub/markov-processes/Result_Analysis.R', echo=TRUE)
source('C:/Users/p/Documents/GitHub/markov-processes/Result_Analysis_prison.R', echo=TRUE)
source('C:/Users/p/Documents/GitHub/markov-processes/Result_Analysis_prison.R', echo=TRUE)
source('C:/Users/p/Documents/GitHub/markov-processes/Result_Analysis_prison.R', echo=TRUE)
gedwd()
getwd()
